// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common/policy.proto

package common

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Policy_PolicyType int32

const (
	Policy_UNKNOWN       Policy_PolicyType = 0
	Policy_MSP           Policy_PolicyType = 1
	Policy_IMPLICIT_META Policy_PolicyType = 2
)

var Policy_PolicyType_name = map[int32]string{
	0: "UNKNOWN",
	1: "MSP",
	2: "IMPLICIT_META",
}

var Policy_PolicyType_value = map[string]int32{
	"UNKNOWN":       0,
	"MSP":           1,
	"IMPLICIT_META": 2,
}

func (x Policy_PolicyType) String() string {
	return proto.EnumName(Policy_PolicyType_name, int32(x))
}

func (Policy_PolicyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7e7bd80df9edbf49, []int{0, 0}
}

type ImplicitMetaPolicy_Rule int32

const (
	ImplicitMetaPolicy_ANY      ImplicitMetaPolicy_Rule = 0
	ImplicitMetaPolicy_ALL      ImplicitMetaPolicy_Rule = 1
	ImplicitMetaPolicy_MAJORITY ImplicitMetaPolicy_Rule = 2
)

var ImplicitMetaPolicy_Rule_name = map[int32]string{
	0: "ANY",
	1: "ALL",
	2: "MAJORITY",
}

var ImplicitMetaPolicy_Rule_value = map[string]int32{
	"ANY":      0,
	"ALL":      1,
	"MAJORITY": 2,
}

func (x ImplicitMetaPolicy_Rule) String() string {
	return proto.EnumName(ImplicitMetaPolicy_Rule_name, int32(x))
}

func (ImplicitMetaPolicy_Rule) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7e7bd80df9edbf49, []int{1, 0}
}

// Policy expresses a policy which the orderer can evaluate, because there has been some desire expressed to support
// multiple policy engines, this is typed as a oneof for now
type Policy struct {
	Type                 Policy_PolicyType `protobuf:"varint,1,opt,name=type,proto3,enum=common.Policy_PolicyType" json:"type,omitempty"`
	Value                []byte            `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Policy) Reset()         { *m = Policy{} }
func (m *Policy) String() string { return proto.CompactTextString(m) }
func (*Policy) ProtoMessage()    {}
func (*Policy) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e7bd80df9edbf49, []int{0}
}

func (m *Policy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Policy.Unmarshal(m, b)
}
func (m *Policy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Policy.Marshal(b, m, deterministic)
}
func (m *Policy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Policy.Merge(m, src)
}
func (m *Policy) XXX_Size() int {
	return xxx_messageInfo_Policy.Size(m)
}
func (m *Policy) XXX_DiscardUnknown() {
	xxx_messageInfo_Policy.DiscardUnknown(m)
}

var xxx_messageInfo_Policy proto.InternalMessageInfo

func (m *Policy) GetType() Policy_PolicyType {
	if m != nil {
		return m.Type
	}
	return Policy_UNKNOWN
}

func (m *Policy) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

// ImplicitMetaPolicy is a policy type which depends on the hierarchical nature of the configuration
// It is implicit because the rule is generate implicitly based on the number of sub policies
// It is meta because it depends only on the result of other policies
// When evaluated, this policy iterates over all immediate child sub-groups, retrieves the policy
// of name sub_policy, evaluates the collection and applies the rule.
// For example, with 4 sub-groups, and a policy name of "foo", ImplicitMetaPolicy retrieves
// each sub-group, retrieves policy "foo" for each subgroup, evaluates it, and, in the case of ANY
// 1 satisfied is sufficient, ALL would require 4 signatures, and MAJORITY would require 3 signatures.
type ImplicitMetaPolicy struct {
	SubPolicy            string                  `protobuf:"bytes,1,opt,name=sub_policy,json=subPolicy,proto3" json:"sub_policy,omitempty"`
	Rule                 ImplicitMetaPolicy_Rule `protobuf:"varint,2,opt,name=rule,proto3,enum=common.ImplicitMetaPolicy_Rule" json:"rule,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ImplicitMetaPolicy) Reset()         { *m = ImplicitMetaPolicy{} }
func (m *ImplicitMetaPolicy) String() string { return proto.CompactTextString(m) }
func (*ImplicitMetaPolicy) ProtoMessage()    {}
func (*ImplicitMetaPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e7bd80df9edbf49, []int{1}
}

func (m *ImplicitMetaPolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImplicitMetaPolicy.Unmarshal(m, b)
}
func (m *ImplicitMetaPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImplicitMetaPolicy.Marshal(b, m, deterministic)
}
func (m *ImplicitMetaPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImplicitMetaPolicy.Merge(m, src)
}
func (m *ImplicitMetaPolicy) XXX_Size() int {
	return xxx_messageInfo_ImplicitMetaPolicy.Size(m)
}
func (m *ImplicitMetaPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_ImplicitMetaPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_ImplicitMetaPolicy proto.InternalMessageInfo

func (m *ImplicitMetaPolicy) GetSubPolicy() string {
	if m != nil {
		return m.SubPolicy
	}
	return ""
}

func (m *ImplicitMetaPolicy) GetRule() ImplicitMetaPolicy_Rule {
	if m != nil {
		return m.Rule
	}
	return ImplicitMetaPolicy_ANY
}

func init() {
	proto.RegisterEnum("common.Policy_PolicyType", Policy_PolicyType_name, Policy_PolicyType_value)
	proto.RegisterEnum("common.ImplicitMetaPolicy_Rule", ImplicitMetaPolicy_Rule_name, ImplicitMetaPolicy_Rule_value)
	proto.RegisterType((*Policy)(nil), "common.Policy")
	proto.RegisterType((*ImplicitMetaPolicy)(nil), "common.ImplicitMetaPolicy")
}

func init() { proto.RegisterFile("common/policy.proto", fileDescriptor_7e7bd80df9edbf49) }

var fileDescriptor_7e7bd80df9edbf49 = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0x41, 0x4b, 0xf3, 0x30,
	0x18, 0xc7, 0xdf, 0xec, 0x9d, 0x9b, 0x7b, 0x9c, 0xa3, 0x46, 0x0f, 0xf3, 0x20, 0x8e, 0x1e, 0x64,
	0x20, 0x6b, 0x61, 0xc3, 0x0f, 0x50, 0xc5, 0x43, 0xb5, 0xed, 0x4a, 0xac, 0xc8, 0xbc, 0x8c, 0xb6,
	0x64, 0xb3, 0x90, 0x9a, 0xd0, 0x26, 0x42, 0xef, 0x7e, 0x00, 0x3f, 0xb2, 0x34, 0xa9, 0x78, 0xf0,
	0xf4, 0xf0, 0xcf, 0xff, 0xc7, 0x93, 0x1f, 0x0f, 0x9c, 0xe6, 0xbc, 0x2c, 0xf9, 0xbb, 0x2b, 0x38,
	0x2b, 0xf2, 0xc6, 0x11, 0x15, 0x97, 0x1c, 0x0f, 0xcc, 0xa3, 0xfd, 0x89, 0x60, 0x10, 0xeb, 0x02,
	0x2f, 0xa0, 0x2f, 0x1b, 0x41, 0xa7, 0x68, 0x86, 0xe6, 0x93, 0xe5, 0xb9, 0x63, 0x08, 0xc7, 0xb4,
	0xdd, 0x48, 0x1a, 0x41, 0x89, 0xc6, 0xf0, 0x19, 0x1c, 0x7c, 0xa4, 0x4c, 0xd1, 0x69, 0x6f, 0x86,
	0xe6, 0x63, 0x62, 0x82, 0x7d, 0x03, 0xf0, 0x4b, 0xe2, 0x23, 0x18, 0x3e, 0x47, 0x8f, 0xd1, 0xfa,
	0x25, 0xb2, 0xfe, 0xe1, 0x21, 0xfc, 0x0f, 0x9f, 0x62, 0x0b, 0xe1, 0x13, 0x38, 0xf6, 0xc3, 0x38,
	0xf0, 0xef, 0xfc, 0x64, 0x1b, 0xde, 0x27, 0x9e, 0xd5, 0xb3, 0xbf, 0x10, 0x60, 0xbf, 0x14, 0xac,
	0xc8, 0x0b, 0x19, 0x52, 0x99, 0x76, 0x4a, 0x17, 0x00, 0xb5, 0xca, 0xb6, 0xc6, 0x5c, 0x8b, 0x8d,
	0xc8, 0xa8, 0x56, 0x59, 0x57, 0xaf, 0xa0, 0x5f, 0x29, 0x66, 0x0c, 0x26, 0xcb, 0xcb, 0x1f, 0xe3,
	0xbf, 0x8b, 0x1c, 0xa2, 0x18, 0x25, 0x1a, 0xb6, 0xaf, 0xa0, 0xdf, 0xa6, 0x56, 0xc7, 0x8b, 0x36,
	0xc6, 0xcb, 0x0b, 0x02, 0x0b, 0xe1, 0x31, 0x1c, 0x86, 0xde, 0xc3, 0x9a, 0xf8, 0xc9, 0xc6, 0xea,
	0xdd, 0x2e, 0x5e, 0xaf, 0xf7, 0x85, 0x7c, 0x53, 0x59, 0xbb, 0xd6, 0xa5, 0x6c, 0xc7, 0xab, 0x7d,
	0x3b, 0x04, 0x4b, 0xe5, 0x8e, 0x57, 0xa5, 0xab, 0x0f, 0x59, 0xbb, 0xe6, 0xd3, 0x6c, 0xa0, 0xe3,
	0xea, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x29, 0x89, 0x3d, 0x6f, 0x6e, 0x01, 0x00, 0x00,
}
